{"version":3,"sources":["utils/reducers.js","utils/actions.js","utils/store.js","utils/helpers.js","components/ProductItem/index.js","utils/queries.js","components/ProductList/index.js","components/CategoryMenu/index.js","components/CartItem/index.js","utils/auth.js","components/Cart/index.js","pages/Home.js","pages/Detail.js","components/Jumbotron/index.js","pages/NoMatch.js","utils/mutations.js","pages/Login.js","pages/Signup.js","components/Nav/index.js","pages/Success.js","pages/OrderHistory.js","App.js","serviceWorker.js","index.js","assets/spinner.gif"],"names":["reducer","state","action","type","products","cartOpen","cart","product","map","_id","purchaseQuantity","newState","filter","length","categories","currentCategory","store","createStore","idbPromise","storeName","method","object","Promise","resolve","reject","db","tx","request","window","indexedDB","open","onupgradeneeded","e","result","createObjectStore","keyPath","onerror","console","log","onsuccess","transaction","objectStore","put","all","getAll","delete","oncomplete","close","ProductItem","item","image","name","price","quantity","useSelector","dispatch","useDispatch","className","to","alt","src","count","pluralize","onClick","itemInCart","find","cartItem","parseInt","QUERY_PRODUCTS","gql","QUERY_CATEGORIES","QUERY_USER","QUERY_CHECKOUT","ProductList","useQuery","loading","data","useEffect","forEach","then","category","key","spinner","CategoryMenu","categoryData","id","CartItem","placeholder","value","onChange","target","role","aria-label","removeFromCart","decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","location","assign","removeItem","stripePromise","loadStripe","Cart","useLazyQuery","getCheckout","toggleCart","res","redirectToCheckout","sessionId","checkout","session","a","getCart","sum","toFixed","calculateTotal","Auth","loggedIn","productIds","i","push","variables","Home","Detail","useParams","useState","currentProduct","setCurrentProduct","indexedProducts","description","disabled","p","Jumbotron","children","style","height","clear","paddingTop","textAlign","NoMatch","LOGIN","ADD_ORDER","ADD_USER","Login","email","password","formState","setFormState","useMutation","login","error","handleFormSubmit","event","preventDefault","mutationResponse","handleChange","onSubmit","htmlFor","Signup","props","addUser","firstName","lastName","Nav","href","logout","Success","addOrder","setTimeout","saveOrder","OrderHistory","user","orders","order","purchaseDate","toLocaleDateString","index","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","App","exact","path","component","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","module","exports"],"mappings":"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","file":"static/js/main.3c023b6b.chunk.js","sourcesContent":["import { useReducer } from \"react\";\nimport {\n  UPDATE_PRODUCTS,\n  ADD_TO_CART,\n  UPDATE_CART_QUANTITY,\n  REMOVE_FROM_CART,\n  ADD_MULTIPLE_TO_CART,\n  UPDATE_CATEGORIES,\n  UPDATE_CURRENT_CATEGORY,\n  CLEAR_CART,\n  TOGGLE_CART\n} from \"./actions\";\n\nexport const reducer = (state, action) => {\n  switch (action.type) {\n    case UPDATE_PRODUCTS:\n      return {\n        ...state,\n        products: [...action.products],\n      };\n\n    case ADD_TO_CART:\n      return {\n        ...state,\n        cartOpen: true,\n        cart: [...state.cart, action.product],\n      };\n\n    case ADD_MULTIPLE_TO_CART:\n      return {\n        ...state,\n        cart: [...state.cart, ...action.products],\n      };\n\n    case UPDATE_CART_QUANTITY:\n      return {\n        ...state,\n        cartOpen: true,\n        cart: state.cart.map(product => {\n          if (action._id === product._id) {\n            product.purchaseQuantity = action.purchaseQuantity\n          }\n          return product\n        })\n      };\n\n    case REMOVE_FROM_CART:\n      let newState = state.cart.filter(product => {\n        return product._id !== action._id;\n      });\n\n      return {\n        ...state,\n        cartOpen: newState.length > 0,\n        cart: newState\n      };\n\n    case CLEAR_CART:\n      return {\n        ...state,\n        cartOpen: false,\n        cart: []\n      };\n\n    case TOGGLE_CART:\n      return {\n        ...state,\n        cartOpen: !state.cartOpen\n      };\n\n    case UPDATE_CATEGORIES:\n      return {\n        ...state,\n        categories: [...action.categories],\n      };\n\n    case UPDATE_CURRENT_CATEGORY:\n      return {\n        ...state,\n        currentCategory: action.currentCategory\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport function useProductReducer(initialState) {\n  return useReducer(reducer, initialState)\n}","export const UPDATE_PRODUCTS = \"UPDATE_PRODUCTS\";\n\nexport const ADD_TO_CART = \"ADD_TO_CART\";\nexport const ADD_MULTIPLE_TO_CART = \"ADD_MULTIPLE_TO_CART\";\nexport const REMOVE_FROM_CART = \"REMOVE_FROM_CART\";\nexport const CLEAR_CART = \"CLEAR_CART\";\nexport const UPDATE_CART_QUANTITY = \"UPDATE_CART_QUANTITY\";\nexport const TOGGLE_CART = \"TOGGLE_CART\";\n\nexport const UPDATE_CATEGORIES = \"UPDATE_CATEGORIES\";\nexport const UPDATE_CURRENT_CATEGORY = \"UPDATE_CURRENT_CATEGORY\";","import { createStore } from 'redux';\nimport { reducer } from './reducers';\n\nconst store = createStore(reducer);\n\nexport default store;","export function pluralize(name, count) {\n    if (count === 1) {\n      return name\n    }\n    return name + 's'\n  }\n  export function idbPromise(storeName, method, object) {\n    return new Promise((resolve, reject) => {\n      const request = window.indexedDB.open('shop-shop', 1);\n  \n      let db, tx, store;\n  \n      request.onupgradeneeded = function(e) {\n        const db = request.result;\n  \n        db.createObjectStore('products', { keyPath: '_id'});\n        db.createObjectStore('categories', { keyPath: '_id'});\n        db.createObjectStore('cart', { keyPath: '_id'});\n      };\n  \n      request.onerror = function(e) {\n        console.log('There was an error');\n      };\n  \n      // on database open success\n      request.onsuccess = function(e) {\n    // save a reference of the database to the `db` variable\n        db = request.result;\n    // open a transaction do whatever we pass into `storeName` (must match one of the object store names)\n        tx = db.transaction(storeName, 'readwrite');\n    // save a reference to that object store\n        store = tx.objectStore(storeName);\n  \n    // if there's any errors, let us know\n        db.onerror = function(e) {\n          console.log('error', e);\n        };\n  \n    switch (method) {\n      case 'put':\n        store.put(object);\n        resolve(object);\n        break;\n      case 'get':\n        const all = store.getAll();\n        all.onsuccess = function() {\n          resolve(all.result);\n        };\n        break;\n      case 'delete':\n        store.delete(object._id);\n        break;\n      default:\n        console.log('No valid method');\n        break;\n    }\n    // when the transaction is complete, close the connection\n        tx.oncomplete = function() {\n          db.close();\n        };\n      };\n  \n    });\n  }","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { idbPromise } from '../../utils/helpers';\nimport { pluralize } from \"../../utils/helpers\"\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ADD_TO_CART, UPDATE_CART_QUANTITY } from \"../../utils/actions\";\n\nfunction ProductItem(item) {\n  \n\n  const {\n    image,\n    name,\n    _id,\n    price,\n    quantity\n  } = item;\n\n  const cart = useSelector((state) => state.cart);\n  const dispatch = useDispatch();\n\n  const addToCart = () => {\n    const itemInCart = cart.find((cartItem) => cartItem._id === _id)\n    if (itemInCart) {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: _id,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n      });\n      idbPromise('cart', 'put', {\n        ...itemInCart,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n      });\n    } else {\n      dispatch({\n        type: ADD_TO_CART,\n        product: { ...item, purchaseQuantity: 1 }\n      });\n      idbPromise('cart', 'put', { ...item, purchaseQuantity: 1});\n    }\n  }\n\n  return (\n    <div className=\"card px-1 py-1\">\n      <Link to={`/products/${_id}`}>\n        <img\n          alt={name}\n          src={`/images/${image}`}\n        />\n        <p>{name}</p>\n      </Link>\n      <div>\n        <div>{quantity} {pluralize(\"item\", quantity)} in stock</div>\n        <span>${price}</span>\n      </div>\n      <button onClick={addToCart}>Add to cart</button>\n    </div>\n  );\n}\n\nexport default ProductItem;","import { gql } from '@apollo/client';\n\nexport const QUERY_PRODUCTS = gql`\n  query getProducts($category: ID) {\n    products(category: $category) {\n      _id\n      name\n      description\n      price\n      quantity\n      image\n      category {\n        _id\n      }\n    }\n  }\n`;\n\nexport const QUERY_ALL_PRODUCTS = gql`\n  {\n    products {\n      _id\n      name\n      description\n      price\n      quantity\n      category {\n        name\n      }\n    }\n  }\n`;\n\nexport const QUERY_CATEGORIES = gql`\n  {\n    categories {\n      _id\n      name\n    }\n  }\n`;\n\nexport const QUERY_USER = gql`\n  {\n    user {\n      firstName\n      lastName\n      orders {\n        _id\n        purchaseDate\n        products {\n          _id\n          name\n          description\n          price\n          quantity\n          image\n        }\n      }\n    }\n  }\n`;\nexport const QUERY_CHECKOUT = gql`\n  query getCheckout($products: [ID]!) {\n    checkout(products: $products) {\n      session\n    }\n  }\n`;","import React, { useEffect } from 'react';\nimport ProductItem from '../ProductItem';\nimport { UPDATE_PRODUCTS } from '../../utils/actions';\nimport { useQuery } from '@apollo/client';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { QUERY_PRODUCTS } from '../../utils/queries';\nimport { idbPromise } from \"../../utils/helpers\";\nimport spinner from '../../assets/spinner.gif';\n\nfunction ProductList() {\n\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\n\n  const currentCategory = useSelector((state) => state.currentCategory);\n  const products = useSelector((state) => state.products);\n  const dispatch = useDispatch();\n  console.log(products);\n\n  useEffect(() => {\n    if (data) {\n      dispatch({\n        type: UPDATE_PRODUCTS,\n        products: data.products,\n      });\n\n      data.products.forEach((product) => {\n        idbPromise('products', 'put', product);\n      });\n    } else if (!loading) {\n      idbPromise('products', 'get').then((products) => {\n        dispatch({\n          type: UPDATE_PRODUCTS,\n          products: products\n        });\n      });\n    }\n  }, [data, loading, dispatch]);\n\n  function filterProducts() {\n    if (!currentCategory) {\n      return products;\n    }\n\n    return products.filter(\n      (product) => product.category._id === currentCategory\n    );\n  }\n\n  return (\n    <div className=\"my-2\">\n      <h2>Our Products:</h2>\n      {products.length ? (\n        <div className=\"flex-row\">\n          {filterProducts().map((product) => (\n            <ProductItem\n              key={product._id}\n              _id={product._id}\n              image={product.image}\n              name={product.name}\n              price={product.price}\n              quantity={product.quantity}\n            />\n          ))}\n        </div>\n      ) : (\n        <h3>You haven't added any products yet!</h3>\n      )}\n      {loading ? <img src={spinner} alt=\"loading\" /> : null}\n    </div>\n  );\n}\n\nexport default ProductList;","import React, { useEffect } from 'react';\nimport { useQuery } from '@apollo/client';\nimport { idbPromise } from '../../utils/helpers';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  UPDATE_CATEGORIES,\n  UPDATE_CURRENT_CATEGORY,\n} from '../../utils/actions';\nimport { QUERY_CATEGORIES } from '../../utils/queries';\n\nfunction CategoryMenu() {\n\n  const { loading, data: categoryData } = useQuery(QUERY_CATEGORIES);\n  const categories = useSelector((state) => state.categories);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (categoryData) {\n      dispatch({\n        type: UPDATE_CATEGORIES,\n        categories: categoryData.categories,\n      });\n      categoryData.categories.forEach(category => {\n        idbPromise('categories', 'put', category);\n      });\n    } else if (!loading) {\n      idbPromise('categories', 'get').then(categories => {\n        dispatch({\n          type: UPDATE_CATEGORIES,\n          categories: categories\n        });\n      });\n    }\n  }, [categoryData, loading, dispatch]);\n\n  const handleClick = (id) => {\n    dispatch({\n      type: UPDATE_CURRENT_CATEGORY,\n      currentCategory: id,\n    });\n  };\n\n  return (\n    <div>\n      <h2>Choose a Category:</h2>\n      {categories.map((item) => (\n        <button\n          key={item._id}\n          onClick={() => {\n            handleClick(item._id);\n          }}\n        >\n          {item.name}\n        </button>\n      ))}\n    </div>\n  );\n}\n\nexport default CategoryMenu;","import React from 'react';\nimport store from '../../utils/store';\nimport { REMOVE_FROM_CART, UPDATE_CART_QUANTITY } from \"../../utils/actions\";\nimport { idbPromise } from \"../../utils/helpers\";\n\nconst CartItem = ({ item }) => {\n\n  const removeFromCart = item => {\n    store.dispatch({\n      type: REMOVE_FROM_CART,\n      _id: item._id\n    });\n    idbPromise('cart', 'delete', { ...item});\n  };\n\n  const onChange = (e) => {\n    const value = e.target.value;\n    if (value === '0') {\n      store.dispatch({\n        type: REMOVE_FROM_CART,\n        _id: item._id\n      });\n      idbPromise('cart', 'delete', { ...item});\n    } else {\n      store.dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: item._id,\n        purchaseQuantity: parseInt(value)\n      });\n      idbPromise('cart', 'put', { ...item, purchaseQuantity: parseInt(value) });\n    }\n  }\n\n  return (\n    <div className=\"flex-row\">\n      <div>\n        <img\n          src={`/images/${item.image}`}\n          alt=\"\"\n        />\n      </div>\n      <div>\n        <div>{item.name}, ${item.price}</div>\n        <div>\n          <span>Qty:</span>\n          <input\n            type=\"number\"\n            placeholder=\"1\"\n            value={item.purchaseQuantity}\n            onChange={onChange}\n          />\n          <span\n            role=\"img\"\n            aria-label=\"trash\"\n            onClick={() => removeFromCart(item)}\n          >\n            🗑️\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default CartItem;","import decode from 'jwt-decode';\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    // Checks if there is a saved token and it's still valid\n    const token = this.getToken();\n    return !!token && !this.isTokenExpired(token);\n  }\n\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else return false;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  getToken() {\n    // Retrieves the user token from localStorage\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    // Saves user token to localStorage\n    localStorage.setItem('id_token', idToken);\n\n    window.location.assign('/');\n  }\n\n  logout() {\n    // Clear user token and profile data from localStorage\n    localStorage.removeItem('id_token');\n    // this will reload the page and reset the state of the application\n    window.location.assign('/');\n  }\n}\n\nexport default new AuthService();","import React, { useEffect } from \"react\";\nimport CartItem from \"../CartItem\";\nimport Auth from \"../../utils/auth\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { TOGGLE_CART, ADD_MULTIPLE_TO_CART } from \"../../utils/actions\";\nimport { QUERY_CHECKOUT } from '../../utils/queries';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { idbPromise } from '../../utils/helpers';\nimport { useLazyQuery } from '@apollo/client';\nimport \"./style.css\";\n\nconst stripePromise = loadStripe('pk_test_TYooMQauvdEDq54NiTphI7jx');\n\nconst Cart = () => {\n  const [getCheckout, { data }] = useLazyQuery(QUERY_CHECKOUT);\n  const cart = useSelector((state) => state.cart);\n  const cartOpen = useSelector((state) => state.cartOpen);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (data) {\n      stripePromise.then((res) => {\n        res.redirectToCheckout({ sessionId: data.checkout.session });\n      });\n    }\n  }, [data]);\n\n  useEffect(() => {\n    async function getCart() {\n      const cart = await idbPromise('cart', 'get');\n      dispatch({ type: ADD_MULTIPLE_TO_CART, products: [...cart] });\n    };\n  \n    if (!cart.length) {\n      getCart();\n    }\n  }, [cart.length, dispatch]);\n  \n  function toggleCart() {\n    dispatch({ type: TOGGLE_CART });\n  }\n\n  function calculateTotal() {\n    let sum = 0;\n    cart.forEach(item => {\n      sum += item.price * item.purchaseQuantity;\n    });\n    return sum.toFixed(2);\n  }\n\n  function submitCheckout() {\n    const productIds = [];\n\n    cart.forEach((item) => {\n      for (let i = 0; i < item.purchaseQuantity; i ++) {\n        productIds.push(item._id);\n      }\n    });\n\n    getCheckout({\n      variables: { products: productIds}\n    });\n\n  }\n\n  if (!cartOpen) {\n    return (\n      <div className=\"cart-closed\" onClick={toggleCart}>\n        <span\n          role=\"img\"\n          aria-label=\"trash\">🛒</span>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"cart\">\n      <div className=\"close\" onClick={toggleCart}>[close]</div>\n      <h2>Shopping Cart</h2>\n      {cart.length ? (\n        <div>\n          {cart.map(item => (\n            <CartItem key={item._id} item={item} />\n          ))}\n\n          <div className=\"flex-row space-between\">\n            <strong>Total: ${calculateTotal()}</strong>\n        \n            {\n              Auth.loggedIn() ?\n                <button onClick={submitCheckout}>\n                  Checkout\n              </button>\n                :\n                <span>(log in to check out)</span>\n            }\n          </div>\n        </div>\n      ) : (\n          <h3>\n            <span role=\"img\" aria-label=\"shocked\">\n              😱\n          </span>\n          You haven't added anything to your cart yet!\n          </h3>\n        )}\n    </div>\n  );\n};\n\nexport default Cart;","import React from \"react\";\nimport ProductList from \"../components/ProductList\";\nimport CategoryMenu from \"../components/CategoryMenu\";\nimport Cart from \"../components/Cart\";\n\nconst Home = () => {\n  return (\n    <div className=\"container\">\n      <CategoryMenu />\n      <ProductList />\n      <Cart />\n    </div>\n  );\n};\n\nexport default Home;","import React, { useEffect, useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { idbPromise } from '../utils/helpers';\nimport Cart from '../components/Cart';\nimport {\n  REMOVE_FROM_CART,\n  UPDATE_CART_QUANTITY,\n  ADD_TO_CART,\n  UPDATE_PRODUCTS,\n} from '../utils/actions';\nimport { QUERY_PRODUCTS } from '../utils/queries';\nimport spinner from '../assets/spinner.gif';\n\nfunction Detail() {\n  const { id } = useParams();\n\n  const [currentProduct, setCurrentProduct] = useState({});\n\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\n\n  const products = useSelector((state) => state.products);\n  const cart = useSelector((state) => state.cart);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (products.length) {\n      setCurrentProduct(products.find((product) => product._id === id));\n    } else if (data) {\n      dispatch({\n        type: UPDATE_PRODUCTS,\n        products: data.products,\n      });\n\n      data.products.forEach((product) => {\n        idbPromise('products', 'put', product);\n      });\n    } else if (!loading) {\n      idbPromise('products', 'get').then((indexedProducts) => {\n        dispatch({\n          type: UPDATE_PRODUCTS,\n          products: indexedProducts,\n        });\n      });\n    }\n  }, [products, data, loading, dispatch, id]);\n\n  const addToCart = () => {\n    const itemInCart = cart.find((cartItem) => cartItem._id === id);\n    if (itemInCart) {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: id,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\n      });\n      idbPromise('cart', 'put', {\n        ...itemInCart,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n      });\n    } else {\n      dispatch({\n        type: ADD_TO_CART,\n        product: { ...currentProduct, purchaseQuantity: 1 },\n      });\n\n      idbPromise('cart', 'put', { ...currentProduct, purchaseQuantity: 1 });\n    }\n  };\n\n  const removeFromCart = () => {\n    dispatch({\n      type: REMOVE_FROM_CART,\n      _id: currentProduct._id,\n    });\n\n    idbPromise('cart', 'delete', {...currentProduct});\n  };\n\n  return (\n    <>\n      {currentProduct && cart ? (\n        <div className=\"container my-1\">\n          <Link to=\"/\">← Back to Products</Link>\n\n          <h2>{currentProduct.name}</h2>\n\n          <p>{currentProduct.description}</p>\n\n          <p>\n            <strong>Price:</strong>${currentProduct.price}{' '}\n            <button onClick={addToCart}>Add to Cart</button>\n            <button\n              disabled={!cart.find((p) => p._id === currentProduct._id)}\n              onClick={removeFromCart}\n            >\n              Remove from Cart\n            </button>\n          </p>\n\n          <img\n            src={`/images/${currentProduct.image}`}\n            alt={currentProduct.name}\n          />\n        </div>\n      ) : null}\n      {loading ? <img src={spinner} alt=\"loading\" /> : null}\n      <Cart />\n    </>\n  );\n}\n\nexport default Detail;","import React from \"react\";\n\nfunction Jumbotron({ children }) {\n  return (\n    <div\n      style={{ height: 560, clear: \"both\", paddingTop: 120, textAlign: \"center\" }}\n    >\n      {children}\n    </div>\n  );\n}\n\nexport default Jumbotron;","import React from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\n\nconst NoMatch = () => {\n  return (\n    <div>\n      <Jumbotron>\n        <h1>404 Page Not Found</h1>\n        <h1>\n          <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\n            🙄\n          </span>\n        </h1>\n      </Jumbotron>\n    </div>\n  );\n};\n\nexport default NoMatch;","import { gql } from '@apollo/client';\n\nexport const LOGIN = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n\nexport const ADD_ORDER = gql`\n  mutation addOrder($products: [ID]!) {\n    addOrder(products: $products) {\n      purchaseDate\n      products {\n        _id\n        name\n        description\n        price\n        quantity\n        category {\n          name\n        }\n      }\n    }\n  }\n`;\n\nexport const ADD_USER = gql`\n  mutation addUser(\n    $firstName: String!\n    $lastName: String!\n    $email: String!\n    $password: String!\n  ) {\n    addUser(\n      firstName: $firstName\n      lastName: $lastName\n      email: $email\n      password: $password\n    ) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;","import React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { Link } from 'react-router-dom';\nimport { LOGIN } from '../utils/mutations';\nimport Auth from '../utils/auth';\n\nfunction Login() {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [login, { error }] = useMutation(LOGIN);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      const mutationResponse = await login({\n        variables: { email: formState.email, password: formState.password },\n      });\n      const token = mutationResponse.data.login.token;\n      Auth.login(token);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n    <div className=\"container my-1\">\n      <Link to=\"/signup\">← Go to Signup</Link>\n\n      <h2>Login</h2>\n      <form onSubmit={handleFormSubmit}>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"email\">Email address:</label>\n          <input\n            placeholder=\"youremail@test.com\"\n            name=\"email\"\n            type=\"email\"\n            id=\"email\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"pwd\">Password:</label>\n          <input\n            placeholder=\"******\"\n            name=\"password\"\n            type=\"password\"\n            id=\"pwd\"\n            onChange={handleChange}\n          />\n        </div>\n        {error ? (\n          <div>\n            <p className=\"error-text\">The provided credentials are incorrect</p>\n          </div>\n        ) : null}\n        <div className=\"flex-row flex-end\">\n          <button type=\"submit\">Submit</button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default Login;","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\nimport Auth from '../utils/auth';\nimport { ADD_USER } from '../utils/mutations';\n\nfunction Signup(props) {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [addUser] = useMutation(ADD_USER);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    const mutationResponse = await addUser({\n      variables: {\n        email: formState.email,\n        password: formState.password,\n        firstName: formState.firstName,\n        lastName: formState.lastName,\n      },\n    });\n    const token = mutationResponse.data.addUser.token;\n    Auth.login(token);\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n    <div className=\"container my-1\">\n      <Link to=\"/login\">← Go to Login</Link>\n\n      <h2>Signup</h2>\n      <form onSubmit={handleFormSubmit}>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"firstName\">First Name:</label>\n          <input\n            placeholder=\"First\"\n            name=\"firstName\"\n            type=\"firstName\"\n            id=\"firstName\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"lastName\">Last Name:</label>\n          <input\n            placeholder=\"Last\"\n            name=\"lastName\"\n            type=\"lastName\"\n            id=\"lastName\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"email\">Email:</label>\n          <input\n            placeholder=\"youremail@test.com\"\n            name=\"email\"\n            type=\"email\"\n            id=\"email\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"pwd\">Password:</label>\n          <input\n            placeholder=\"******\"\n            name=\"password\"\n            type=\"password\"\n            id=\"pwd\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row flex-end\">\n          <button type=\"submit\">Submit</button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default Signup;","import React from 'react';\nimport Auth from '../../utils/auth';\nimport { Link } from 'react-router-dom';\n\nfunction Nav() {\n  function showNavigation() {\n    if (Auth.loggedIn()) {\n      return (\n        <ul className=\"flex-row\">\n          <li className=\"mx-1\">\n            <Link to=\"/orderHistory\">Order History</Link>\n          </li>\n          <li className=\"mx-1\">\n            {/* this is not using the Link component to logout or user and then refresh the application to the start */}\n            <a href=\"/\" onClick={() => Auth.logout()}>\n              Logout\n            </a>\n          </li>\n        </ul>\n      );\n    } else {\n      return (\n        <ul className=\"flex-row\">\n          <li className=\"mx-1\">\n            <Link to=\"/signup\">Signup</Link>\n          </li>\n          <li className=\"mx-1\">\n            <Link to=\"/login\">Login</Link>\n          </li>\n        </ul>\n      );\n    }\n  }\n\n  return (\n    <header className=\"flex-row px-1\">\n      <h1>\n        <Link to=\"/\">\n          <span role=\"img\" aria-label=\"shopping bag\">\n            🛍️\n          </span>\n          -Shop-Shop\n        </Link>\n      </h1>\n\n      <nav>{showNavigation()}</nav>\n    </header>\n  );\n}\n\nexport default Nav;","import React, { useEffect } from 'react';\nimport { ADD_ORDER } from '../utils/mutations';\nimport { idbPromise } from '../utils/helpers';\nimport Jumbotron from '../components/Jumbotron'\nimport { useMutation } from '@apollo/client';\n\nfunction Success() {\n    const [addOrder] = useMutation(ADD_ORDER);\n\n    useEffect(() => {\n        async function saveOrder() {\n            const cart = await idbPromise('cart', 'get');\n            const products = cart.map(item => item._id);\n\n            if (products.length) {\n                const { data } = await addOrder({ variables: { products } });\n                const productData = data.addOrder.products;\n              \n                productData.forEach((item) => {\n                  idbPromise('cart', 'delete', item);\n                });\n              }\n              setTimeout(() => {\n                window.location.assign('/');\n              }, 3000);\n        }\n        saveOrder();\n    }, [addOrder]);\n\n    return (\n      <div>\n        <Jumbotron>\n          <h1>Success!</h1>\n          <h2>\n            Thank you for your purchase!\n          </h2>\n          <h2>\n            You will now be redirected to the homepage\n          </h2>\n        </Jumbotron>\n      </div>\n    );\n  };\n\nexport default Success;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { useQuery } from '@apollo/client';\nimport { QUERY_USER } from '../utils/queries';\n\nfunction OrderHistory() {\n  const { data } = useQuery(QUERY_USER);\n  let user;\n\n  if (data) {\n    user = data.user;\n  }\n\n  return (\n    <>\n      <div className=\"container my-1\">\n        <Link to=\"/\">← Back to Products</Link>\n\n        {user ? (\n          <>\n            <h2>\n              Order History for {user.firstName} {user.lastName}\n            </h2>\n            {user.orders.map((order) => (\n              <div key={order._id} className=\"my-2\">\n                <h3>\n                  {new Date(parseInt(order.purchaseDate)).toLocaleDateString()}\n                </h3>\n                <div className=\"flex-row\">\n                  {order.products.map(({ _id, image, name, price }, index) => (\n                    <div key={index} className=\"card px-1 py-1\">\n                      <Link to={`/products/${_id}`}>\n                        <img alt={name} src={`/images/${image}`} />\n                        <p>{name}</p>\n                      </Link>\n                      <div>\n                        <span>${price}</span>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            ))}\n          </>\n        ) : null}\n      </div>\n    </>\n  );\n}\n\nexport default OrderHistory;","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\nimport { Prodiver } from 'react-redux';\nimport store from './utils/store';\nimport Home from './pages/Home';\nimport Detail from './pages/Detail';\nimport NoMatch from './pages/NoMatch';\nimport Login from './pages/Login';\nimport Signup from './pages/Signup';\nimport Nav from './components/Nav';\nimport Success from './pages/Success';\nimport OrderHistory from './pages/OrderHistory';\n\nconst httpLink = createHttpLink({\n  uri: '/graphql',\n});\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem('id_token');\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div>\n            <Nav />\n            <Switch>\n              <Route exact path=\"/\" component={Home} />\n              <Route exact path=\"/login\" component={Login} />\n              <Route exact path=\"/signup\" component={Signup} />\n              <Route exact path=\"/success\" component={Success} />\n              <Route exact path=\"/orderHistory\" component={OrderHistory} />\n              <Route exact path=\"/products/:id\" component={Detail} />\n              <Route component={NoMatch} />\n            </Switch>\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n  );\n  \n  export function register(config) {\n    if (\n      process.env.NODE_ENV === 'production' &&\n      'serviceWorker' in navigator) {\n      // The URL constructor is available in all browsers that support SW.\n  \n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n      if (publicUrl.origin !== window.location.origin) {\n        // Our service worker won't work if PUBLIC_URL is on a different origin\n        // from what our page is served on. This might happen if a CDN is used to\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n        return;\n      }\n  \n      window.addEventListener('load', () => {\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n  \n        if (isLocalhost) {\n          // This is running on localhost. Let's check if a service worker still exists or not.\n          checkValidServiceWorker(swUrl, config);\n  \n          // Add some additional logging to localhost, pointing developers to the\n          // service worker/PWA documentation.\n          navigator.serviceWorker.ready.then(() => {\n            console.log(\n              'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n            );\n          });\n        } else {\n          // Is not localhost. Just register service worker\n          registerValidSW(swUrl, config);\n        }\n      });\n    }\n  }\n  \n  function registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n      .register(swUrl)\n      .then(registration => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          if (installingWorker == null) {\n            return;\n          }\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the updated precached content has been fetched,\n                // but the previous service worker will still serve the older\n                // content until all client tabs are closed.\n                console.log(\n                  'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                );\n  \n                // Execute callback\n                if (config && config.onUpdate) {\n                  config.onUpdate(registration);\n                }\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // \"Content is cached for offline use.\" message.\n                console.log('Content is cached for offline use.');\n  \n                // Execute callback\n                if (config && config.onSuccess) {\n                  config.onSuccess(registration);\n                }\n              }\n            }\n          };\n        };\n      })\n      .catch(error => {\n        console.error('Error during service worker registration:', error);\n      });\n  }\n  \n  function checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n      headers: { 'Service-Worker': 'script' },\n    })\n      .then(response => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n        const contentType = response.headers.get('content-type');\n        if (\n          response.status === 404 ||\n          (contentType != null && contentType.indexOf('javascript') === -1)\n        ) {\n          // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then(registration => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n          // Service worker found. Proceed as normal.\n          registerValidSW(swUrl, config);\n        }\n      })\n      .catch(() => {\n        console.log(\n          'No internet connection found. App is running in offline mode.'\n        );\n      });\n  }\n  \n  export function unregister() {\n    if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.ready\n        .then(registration => {\n          registration.unregister();\n        })\n        .catch(error => {\n          console.error(error.message);\n        });\n    }\n  }","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nserviceWorker.register();\n","module.exports = __webpack_public_path__ + \"static/media/spinner.ab497855.gif\";"],"sourceRoot":""}